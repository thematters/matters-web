name: Test E2E

on: push

env:
  PLAYWRIGHT_AUTH_EMAIL_ALICE: ${{ secrets.PLAYWRIGHT_AUTH_EMAIL_ALICE }}
  PLAYWRIGHT_AUTH_PWD_ALICE: ${{ secrets.PLAYWRIGHT_AUTH_PWD_ALICE }}
  PLAYWRIGHT_AUTH_EMAIL_BOB: ${{ secrets.PLAYWRIGHT_AUTH_EMAIL_BOB }}
  PLAYWRIGHT_AUTH_PWD_BOB: ${{ secrets.PLAYWRIGHT_AUTH_PWD_BOB }}
  PLAYWRIGHT_PAYMENT_PWD_ALICE: ${{ secrets.PLAYWRIGHT_PAYMENT_PWD_ALICE }}
  PLAYWRIGHT_PAYMENT_PWD_BOB: ${{ secrets.PLAYWRIGHT_PAYMENT_PWD_BOB }}
  PLAYWRIGHT_METAMASK_SECRET_WORD: ${{secrets.PLAYWRIGHT_METAMASK_SECRET_WORD}}
  PLAYWRIGHT_METAMASK_PASSWORD: ${{secrets.PLAYWRIGHT_METAMASK_PASSWORD}}
  PLAYWRIGHT_WALLET_ADDRESS_ALICE: ${{secrets.PLAYWRIGHT_WALLET_ADDRESS_ALICE}}
  PLAYWRIGHT_PRIVATE_KEY_ALICE: ${{secrets.PLAYWRIGHT_PRIVATE_KEY_ALICE}}

jobs:
  e2e:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master

      - name: Install pnpm
        uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd # pin@v2.2.4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.14'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Install linux deps
        run: |
          sudo apt-get install --no-install-recommends -y \
          fluxbox \
          xvfb

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright_cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright Browsers
        run: npm run test:prepare
        if: steps.playwright_cache.outputs.cache-hit != 'true'

      - name: Generate Types (Develop)
        if: github.base_ref != 'master'
        run: npm run gen:type

      - name: Generate Types (production)
        if: github.base_ref == 'master'
        run: npm run gen:type:prod

      - name: Run Playwright tests
        run: cp .env.dev .env.local &&
          Xvfb :0 -screen 0 1024x768x24 -listen tcp -ac &
          fluxbox & npm run test

      - name: Output Playwright tests
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
