name: Deployment

on:
  pull_request:
    branches:
      - master
      - main
      - develop
    types: [closed]

concurrency:
  group: ${{ github.workflow }}-${{ github.base_ref }}
  cancel-in-progress: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  build_and_deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup rclone
        if: github.base_ref == 'develop' || github.base_ref == 'master' || github.base_ref == 'main'
        uses: AnimMouse/setup-rclone@v1
        with:
          rclone_config: |
            [r2]
            type = s3
            provider = Cloudflare
            access_key_id = ${{ secrets.RCLONE_CONFIG_R2_ACCESS_KEY_ID }}
            secret_access_key = ${{ secrets.RCLONE_CONFIG_R2_SECRET_ACCESS_KEY }}
            endpoint = ${{ secrets.RCLONE_CONFIG_R2_ENDPOINT }}
          disable_base64: true

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        id: node_modules_cache
        with:
          path: node_modules
          key: ${{ runner.os }}-v18-npm-v4-${{ hashFiles('package-lock.json') }}

      - name: Cache Next.js
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install Dependencies
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Generate Types (develop)
        if: github.base_ref == 'develop'
        run: npm run gen:type

      - name: Generate Types (production)
        if: github.base_ref == 'master' || github.base_ref == 'main'
        run: npm run gen:type:prod

      - name: Lint
        run: |
          npm run i18n \
          && npm run lint \
          && npm run format:check

      # - name: Test
      #   run: npm install codecov -g && npm run test && codecov
      #   env:
      #     CODECOV_TOKEN: f109cbf6-b6c7-4a08-ad03-981bc4cd1fe8
      #     MATTERS_ENV: test
      #     API_URL: http://matters-server-develop.ap-southeast-1.elasticbeanstalk.com/graphql

      # - name: Test - BDD

      # === `develop` branch ===
      - name: Build (develop)
        if: github.base_ref == 'develop'
        run: cp .env.dev .env.local && npm run build

      # === `master` branch ===
      - name: Build (production)
        if: github.base_ref == 'master' || github.base_ref == 'main'
        run: cp .env.prod .env.local && npm run build

      - name: Setup AWS
        if: github.base_ref == 'develop' || github.base_ref == 'master' || github.base_ref == 'main'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.base_ref == 'develop' && secrets.AWS_REGION_DEV || secrets.AWS_REGION_PROD }}

      - name: Generate deployment package
        if: github.base_ref == 'develop' || github.base_ref == 'master' || github.base_ref == 'main'
        run: |
          rm -rf node_modules \
          && npm install --production \
          && zip -r --symlinks deploy.zip . -x .git/\*

      - name: Upload Assets (develop - R2)
        if: github.base_ref == 'develop' || github.base_ref == 'main'
        run: rclone sync .next r2:matters-assets-next-develop/_next --include "/*" --include "/static/**" -P

      - name: Deploy to EB (develop)
        if: github.base_ref == 'develop'
        uses: einaregilsson/beanstalk-deploy@v19
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: matters-stage
          environment_name: ${{ secrets.AWS_EB_ENV_NAME_DEV }}
          version_label: matters-web-develop-${{ hashFiles('deploy.zip') }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.AWS_REGION_DEV }}
          deployment_package: deploy.zip
          use_existing_version_if_available: true
          wait_for_deployment: true

      - name: Upload Assets (production - R2)
        if: github.base_ref == 'master' || github.base_ref == 'main'
        run: rclone sync .next r2:matters-assets-next/_next --include "/*" --include "/static/**" -P

      - name: Deploy to EB (production)
        if: github.base_ref == 'master' || github.base_ref == 'main'
        uses: einaregilsson/beanstalk-deploy@v19
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: matters-prod
          environment_name: ${{ secrets.AWS_EB_ENV_NAME_PROD }}
          version_label: matters-web-prod-${{ hashFiles('deploy.zip') }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.AWS_REGION_PROD }}
          deployment_package: deploy.zip
          use_existing_version_if_available: true
          wait_for_deployment: true

      - name: Slack Notification
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: matters-web
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
